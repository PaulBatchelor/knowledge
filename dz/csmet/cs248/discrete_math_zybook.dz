ns csmet/cs248

nn discrete_math_zybook
ln Discrete Math Zybook

ns +discrete_math_zybook

nn glossary
ln Glossary of keywords and terms

nn refs
ln External references

nn toc
at ol
ln Table of Contents

nn toc/01_logic
at ol
nn toc/02_proofs
nn toc/03_sets
nn toc/04_functions
nn toc/05_boolean_algebra
nn toc/06_relations_digraphs
nn toc/07_computation
nn toc/08_induction_recursion
nn toc/09_integer_properties
nn toc/10_introduction_to_counting
nn toc/11_advanced_counting
nn toc/12_discrete_probability
nn toc/13_graphs
nn toc/14_trees
nn toc/15_appendix

ns +toc/01_logic
nn 01_propositions_and_logical_operators
ln 1.1: Propositions and Logical Operators

nn 02_evaluating_compound_propositions
ln 1.2: Evaluating Compound Propositions

nn 03_conditional_statements
ln 1.3: Conditional Statements

nn 04_logical_equivalence
ln 1.4: Logical Equivalence

nn 05_laws_propositional_logic
ln 1.5: Laws of Propositional Logic

nn 06_predicates_and_quantifiers
ln 1.6: Predicates and Quantifiers

nn 07_quantified_statements
ln 1.7: quantified statements

nn 08_de_morgans_law_for_quantified_statements
ln 1.8: De Morgan's Law for Quantified Statements

nn 09_nested_quantifiers
ln 1.9: Nested Quantifiers

ns ..

nn glossary/logic
ln Logic: the study of formal reasoning.
co $ ?01_propositions_and_logical_operators
ff Define "Logic"
fb Logic: the study of formal reasoning.

nn glossary/proposition
ln Proposition: a statement that is either true or false.
ff Define "Proposition"
ff Proposition: a statement that is either true or false.
co $ ../logic
cr The most basic element in logic is a proposition
co $ ?01_propositions_and_logical_operators

nn glossary/truth_value
ln Truth Value: a value indicating whether the proposition is
ln true or false. A proposition is still a proposition
ln whether its truth value is known to be true, false, unknown,
ln or a matter of opinion.
co $ ../proposition
cr A proposition's truth value
ff What is a Truth Value?
fb Truth Value: a value indicating whether the proposition is
fb true or false. A proposition is still a proposition
fb whether its truth value is known to be true, false, unknown,
fb or a matter of opinion.

nn glossary/propositional_variable
co $ ?01_propositions_and_logical_operators
ln Propositional Variable: a variable used to denote arbitrary
ln propositions.
ff What is a propositional variable?
fb Propositional Variable: a variable used to denote arbitrary
fb propositions.
co $ ?glossary/proposition

nn glossary/compound_proposition
co $ ?01_propositions_and_logical_operators
ln Compound Proposition: created by connecting individual
ln propositions with logical operators.
ff What is a Compound Proposition?
fb Compound Proposition: created by connecting individual
fb propositions with logical operators.
co $ ?glossary/proposition

nn glossary/logical_operation
co $ ?01_propositions_and_logical_operators
ln Logical Operation: operation that combines proposition
ln using a particular composition rule.
ff What is a Logical Operation?
fb Logical Operation: operation that combines proposition
fb using a particular composition rule.

nn glossary/conjunction
co $ ?01_propositions_and_logical_operators
ln Conjunction: Logical Operation. Denoted by '^'. The
ln proposition $p ^ q$ is read "p and q". "p and q" is false
ln if p is false, q is false, or both are false.
co $ ../logical_operation
ff What is a Conjunction Operation?
fb Conjunction: Logical Operation. Denoted by '^'. The
fb proposition $p ^ q$ is read "p and q". "p and q" is false
fb if p is false, q is false, or both are false.

nn glossary/truth_table
co $ ?01_propositions_and_logical_operators
ln Truth Table: shows the truth value of a compound operation
ln for every possible combination of truth values for
ln the variables in the compound proposition.
ff What is a Truth Table?
fb A truth table shows the truth value of a compound operation
fb for every possible combination of truth values for the
fb variables in the compound proposition

nn glossary/disjunction
co $ ?01_propositions_and_logical_operators
ln Disjunction Operation: denoted by \/, read "or". "p or q"
ln is true either p or q is true, or both are true.
ff What is the Disjunction Operation?
fb "or". "p or q" is true if either p or q is true, or
fb both are true.
co $ ?glossary/logical_operation

nn glossary/exclusive_or
co $ ?01_propositions_and_logical_operators
ln Exlusive Or: AKA "xor". "p xor q" evaluates true when
ln p is true and q is false, or when p is false and q is
ln true.
co $ ?glossary/logical_operation
ff Describe "Exclusive Or"
fb Exlusive Or: AKA "xor". "p xor q" evaluates true when
fb p is true and q is false, or when p is false and q is
fb true.

nn glossary/negation
co $ ?01_propositions_and_logical_operators
co $ ../logical_operation
ln Negation: acts on just one proposition and has the effect
ln of reversing the truth value of the proposition.
ff What is the negation operation?
fb Negation: reverses truth value of a proposition.

zz NOTE: I would love for this to work
zz nn ?02_evaluating_compound_propositions/order_of_ops

nn glossary/conditional_operation
co $ ?03_conditional_statements
ln Conditional Operation: denoted with a right arrow symbol,
ln is read "if p, then q". Proposition is false if p is true
ln and q is false. Otherwise, it is true.
ff What is the Conditional Operation?
fb Conditional Operation: denoted with a right arrow symbol,
fb is read "if p, then q". Proposition is false if p is true
fb and q is false. Otherwise, it is true.

nn glossary/hypothesis_conclusion
co $ ?03_conditional_statements
co $ ../conditional_operation
ln In conditional operation, p is called the hypothesis,
ln and q is called the conclusion.
ff What are the components of a conditional operation called?
fb in the conditional operation (p,q), p is the hypothesis,
fb and q is the conclusion.

nn glossary/converse
co $ ?03_conditional_statements
ln Converse Statement: (q,p).
ff Give the converse statement of "If it is raining today, the game will be cancelled"
fb If the game is cancelled, it is raining today.

nn glossary/contrapositive
co $ ?03_conditional_statements
ln Contrapositive statement: (!q, !p).
ff Give the contrapositive statement of "If it is raining today, the game will be cancelled"
fb If the game is not cancelled, then it is not raining today

nn glossary/inverse
co $ ?03_conditional_statements
ln Inverse statement: (!p, !q)
ff Give the contrapositive statement of "If it is raining today, the game will be cancelled"
fb If it is not raining today, the game will not be cancelled.

nn glossary/biconditional_operation
co $ ?03_conditional_statements
ln Biconditional Statement: denoted with double-arrow. 
ln "p if and only if q". True when they have the same value,
ln false when they are different.
ff What is a Biconditional Statement?
fb Biconditional Statement: denoted with double-arrow. 
fb "p if and only if q". True when they have the same value,
fb false when they are different.

nn glossary/tautology
co $ ?04_logical_equivalence
ln Tautology: a compound proposition that is always true,
ln regardless of the truth value of the 
ln individual propositions that occur in it.
ff What is a tautology?
fb Tautology: a compound proposition that is always true,
fb regardless of the truth value of the 
fb individual propositions that occur in it.

nn glossary/contradiction
co $ ?04_logical_equivalence
ln Contradiction: a compound proposition that is always false,
ln regardless of the truth value of the individual propositions
ln that occur in it.
ff What is a contradiction?
fb Contradiction: a compound proposition that is always false,
fb regardless of the truth value of the individual propositions
fb that occur in it.
co $ ../tautology

nn glossary/logically_equivalent
co $ ?04_logical_equivalence
ln Logical Equivalence: when two compound propositions have
ln the same truth value, regardless of the truth values of
ln their individual propositions.
ff What does it mean for something to be logically equivalent?
fb Two compound propositions are said to be logically equivalent
fb when they have the same truth value, regardless of the
fb truth values in their individual propositions.

nn glossary/de_morgans_laws
co $ ?04_logical_equivalence
ln De Morgan's Laws: laws that show how to correctly distribute
ln a negation operation inside a parenthesized expression.
ff What are De Morgan's Laws?
fb De Morgan's Laws: laws that show how to correctly distribute
fb a negation operation inside a parenthesized expression.

nn glossary/predicate
co $ ?06_predicates_and_quantifiers
ln Predicate: a logical statement with a truth value that is
ln a function of one or more values.
ff What is a predicate?
fb A logical statement with a truth value that is a function
fb of one or more values.

nn glossary/domain
co $ ?06_predicates_and_quantifiers
ln Domain: the set of all possible values for the variable.

nn glossary/universal_quantifier
co $ ?06_predicates_and_quantifiers
ln Universal Quantifier: a special symbol used in mathematics
ln used to denote that a property or statement is true for
ln all elements within a specified domain or set.
ff What is a univeral quantifier?
fb A special symbol in mathematics used to denote that a
fb property or statement is true for all elements within a
fb specified domain or set.

nn glossary/counterexample
co $ ?06_predicates_and_quantifiers
ln Counterexample: an element in the domain of a universally
ln quantified statement for which the predicate is false.
ln A single counterexample is sufficient to show that a
ln universally quantified statement is false.

nn glossary/existential_quantifier
co $ ?06_predicates_and_quantifiers
ln Existential Quantifier: a special symbol used in mathematics
ln to indicate that a property or statement is true for
ln at least one element within a specified domain or set.
ff What is an existential quantifier?
fb a special symbol used in mathematics
fb to indicate that a property or statement is true for
fb at least one element within a specified domain or set.

nn glossary/quantifier
ln Quantifier: generic name for existential and universal
ln quantifiers
co $ ../existential_quantifier
co $ ../universal_quantifier
co $ ?07_quantified_statements

nn glossary/quantified_statement
co $ ?07_quantified_statements
ln Quantified Statement: a logical statement that includes
ln a universal or existential quantifier

nn glossary/free_variable
co $ ?07_quantified_statements
ln Free Variable: a variable in a predicate that is free
ln to take on any value in the domain.
ff What is a "free variable"?
fb Free Variable: a variable in a predicate that is free
fb to take on any value in the domain.

nn glossary/bound_variable
co $ ?07_quantified_statements
ln Bound Variable: a variable in a predicate that is bound
ln to a quantifier.
co $ ../free_variable

nn glossary/nested_quantifier
co $ ?09_nested_quantifiers
ln Nested Quantifier: A logical expression with more than
ln one quantifier that binds different variables in the same
ln predicate.
ff What is a nested quantifier?
fb Nested Quantifier: A logical expression with more than
fb one quantifier that binds different variables in the same
fb predicate.

nn refs/order_of_quantifiers
hl https://en.wikipedia.org/wiki/Quantifier_(logic)#Order_of_quantifiers_(nesting)

