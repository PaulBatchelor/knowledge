@2025-04-02

@20:41 Create partially automated rust docs extractor #timelog:00:45:00
Added in playground/go/htmlparse. Incomplete. I think
I have all the raw ingredients, what is left is to generate
properly formatted dagzet code.

@2025-04-05
@09:59 Rust Scraper/card generator work #timelog:00:45:32
It works. I still need to do a little bit
of manual formatting with a downloaded rust page, but
I think it will save me some time.
---
Manual work involves: curling the page to an HTML page,
running "tidy" to make it easier to edit, and then
extracting just the section to be converted to cards,
which are just a pile of div/li elements. Then, this file
can be passed into the program and the resulting DZ file
gets printed to stdout.

@10:51 try out the new tool #timelog:01:07:50
Okay, it broke. the HTML formatting is different on Pin
and process. Let's see how hard it is to get this working.
---
working now, getting some automation tools set up

@2025-04-07
We have to get back on interview prep.

@21:41 Leetcode flashcards #leetcode-flashcards #timelog:00:29:31
I'd like to revisit these bits of my knowledge graph,
and attempt to turn as much as I can into flashcards.

@2025-04-08

@20:52 Rust flashcards #timelog:00:15:34

@2025-04-09

@21:47 Rust flashcards #timelog:00:07:39

@2025-04-10

@20:32 HTTP status code flashcards? #timelog:00:58:52
Managed to get 100, 200, 300. 400 and 500 left.

@2025-04-15

@20:52 rust doc HTML parser troubleshooting #timelog:00:12:40
It's not parsing the description text sometimes.
---
The "process" page looks fixed

@21:06 Onto fixing my mistakes. #timelog:00:21:00
Now, when did I start automating this process...

@2024-04-17
@21:02 Gently dipping my toes into leetcode again

@21:02 TwoSum
#! dz leetcode/problems/1_two_sum
I am a little rusty...

@21:51 peeking at ThreeSum
#! dz leetcode/problems/15_3sum
I think I want to try and do all problems related to TwoSum,
really get that pattern in my fingers.

@2025-04-19

@16:27 attempting ThreeSum again
#! dz leetcode/problems/15_3sum
The problem hints that if you keep one of the values
constant, it turns into a TwoSum problem. So, what you
want is to take X, and then find two values Y and Z
that add up to -X.
---
We tried this a few days ago, and it didn't work

@16:53 studying two-sum ii, in order to grok 3sum
#! dz leetcode/problems/167_two_sum_ii
Okay done. The solution was mostly spoiled already for me,
but it involved using two-pointer

@17:55 Another stab at 3sum
#! dz leetcode/problems/15_3sum
I started reading the editorial, and I solved two sum ii
while I was doing this. I think it they want you to
sort the list, and then perform it as a two-sum ii problem.
When you find the a pair, the ordering is guaranteed.
---
Having problems with the uniqueness logic.
---
I think we can take advantage of the sorted list. We only
want numbers in ascending order, so make sure the low
value starts at the index after the one being checked.
---
edge case didn't work
---
Looked at the solution: the twosum problem actually
added all three values together, not just one to get
a target. It also had logic that skipped over duplicate
values. The main loop also broke out early if there
were any values greater than zero, it indicated that
no numbers following it could sum to zero.

@18:23 Valid Parentheses
#! dz leetcode/problems/20_valid_parentheses
I think I remember this one being a stack problem.
You push open ones, and then if a closed one appears,
it needs to match the last element on the stack.
---
Issues: got my variables wrong. Didn't check the string
length to make sure it was a multiple of 2.
---
Another edge case: the stack needs to be empty at the
end of the function.

@2025-04-20
@10:41 Looking at b
#! dz/APL/b_study
can't get it to compile. oh well
---
the guide provides an overview of each of the
files, and provides some explanation for
some of the terse variables.
---
c.h has some basic definitions for a "terser C language".
I'm tempted to see how portable this one is, could
be helpful for my ed coding adventures.
